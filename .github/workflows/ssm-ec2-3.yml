name: AWS SSM Send-Command Example

on:
  workflow_dispatch:
    inputs:
      instanceId:
        description: 'ID of the EC2 instance'
        required: true
      installCommands:
        description: 'Commands to run (Separate different commands with a semicolon; and for multiline use | support)'
        required: true
        default: |
          ls -al && \
          echo "Deploying application" && \
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - && \
          sudo apt-get install -y nodejs

jobs:
  start:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@v1.1.1
        id: ssm
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: ${{ github.event.inputs.instanceId }}
          command: |
            ${{ github.event.inputs.installCommands }}
          comment: "Executing deployment commands"

      - name: Get the Command ID
        run: echo "The Command ID is ${{ steps.ssm.outputs.command-id }}"
        id: get-command-id

      - name: Configure AWS Credentials for CLI
        run: |
          echo "Configuring AWS CLI credentials"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}      

      - name: Wait for Command Completion
        id: wait
        run: |
          COMMAND_ID=${{ steps.ssm.outputs.command-id }}
          aws ssm wait command-executed \
            --command-id $COMMAND_ID \
            --instance-id ${{ github.event.inputs.instanceId }} \
            --region ${{ secrets.AWS_REGION }}

      - name: Check Command Status
        id: check-status
        run: |
          COMMAND_ID=${{ steps.ssm.outputs.command-id }}
          STATUS=$(aws ssm list-command-invocations \
            --command-id $COMMAND_ID \
            --instance-id ${{ github.event.inputs.instanceId }} \
            --region ${{ secrets.AWS_REGION }} \
            --output text --query 'CommandInvocations[0].Status')

          echo "::set-output name=status::$STATUS"

      - name: Print Status
        run: echo "The command execution status is ${{ steps.check-status.outputs.status }}"

      - name: Verify Command Execution
        if: steps.check-status.outputs.status != 'Success'
        run: |
          echo "Command did not execute successfully. Status: ${{ steps.check-status.outputs.status }}"
          exit 1
