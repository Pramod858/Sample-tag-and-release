name: AWS SSM Send-Command Example

on:
  workflow_dispatch:
    inputs:
      instanceId:
        description: 'ID of the EC2 instance'
        required: true
      installCommands:
        description: 'Commands to run (Separate multiple commands with semicolons ";")'
        required: true
        default: echo "Hello World"

jobs:
  start:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: AWS SSM Send-Command
        uses: peterkimzz/aws-ssm-send-command@master
        id: ssm
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          instance-ids: ${{ github.event.inputs.instanceId }}
          command: |
            ${{ github.event.inputs.installCommands }}
          comment: "Running specified commands"
          wait-for-command-completion: true

      - name: Fetch Command Status and Output
        id: fetch-status-output
        run: |
          COMMAND_STATUS=${{ steps.ssm.outputs.command-status }}
          COMMAND_OUTPUT=$(aws ssm get-command-invocation --command-id ${{ steps.ssm.outputs.command-id }} --instance-id ${{ github.event.inputs.instanceId }} --query 'StandardOutputContent' --output text --region ${{ secrets.AWS_REGION }})
          echo "Command Status: $COMMAND_STATUS"
          echo "Command Output: $COMMAND_OUTPUT"
          echo "COMMAND_STATUS=$COMMAND_STATUS" >> $GITHUB_ENV
          echo "COMMAND_OUTPUT=$COMMAND_OUTPUT" >> $GITHUB_ENV

      - name: Print Status
        run: echo "The command execution status is ${{ env.COMMAND_STATUS }}"

      - name: Print Output
        run: echo "The command output is ${{ env.COMMAND_OUTPUT }}"

      - name: Verify Command Execution
        if: env.COMMAND_STATUS != 'Success'
        run: |
          echo "Command did not execute successfully. Status: ${{ env.COMMAND_STATUS }}"
          exit 1
