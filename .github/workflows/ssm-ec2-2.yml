name: Deploy to EC2 using SSM (2)

on:
  # Manual trigger for the workflow
  workflow_dispatch:
    inputs:
      instanceTag:
        description: 'Tag of the EC2 instance'
        required: true
        default: 'MyInstance'
      installCommands:
        description: 'Commands to run'
        required: true
        default: 'curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -, sudo apt-get install -y nodejs'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Send command from SSM to EC2
        id: install
        run: |
          instance_ids=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${{ github.event.inputs.instanceTag }}" --query "Reservations[*].Instances[*].InstanceId" --output text)

          if [ -z "$instance_ids" ]; then
            echo "No instances found with tag: ${{ github.event.inputs.instanceTag }}"
            exit 1
          fi

          # Prepare install commands
          IFS=',' read -ra INSTALL_CMDS <<< "${{ github.event.inputs.installCommands }}"

          # Run install commands
          for cmd in "${INSTALL_CMDS[@]}"; do
            aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --targets "Key=instanceIds,Values=$instance_ids" \
              --parameters "{\"commands\":[\"$cmd\"],\"executionTimeout\":[\"3600\"]}" \
              --timeout-seconds 600 \
              --comment "Execute: $cmd"
          done
